#!/bin/sh -e

if ! id -u redis >/dev/null; then
  echo "The user redis does not exist! Please install via RPM"
  exit 1
fi

if [ "`id -u`" != "0" ]; then
  echo "Must run as root"
  exit 1
fi

my_exec_name="$0"
config_type=""
config_name=""
while [ "$1" != "" ]; do
  if [ "$1" = "--type" ]; then
    shift
    config_type="$1"
  else
    config_name="$1"
  fi
  shift
done

printUsage() {
  echo "USAGE: $my_exec_name  --type <sentinel|redis> NewConfigName" 1>&2
}

if [ "$config_name" = "" ] || [ "${config_name:0:1}" = "-" ]; then
  printUsage
  exit 1
fi

if [ "$config_type" = "redis" ]; then
  echo "Creating /etc/redis/server.conf.d/${config_name}.conf . Please modify this"
  echo "file with your specific configuration."
  echo "Please ensure that the ports do not conflict with other instances"
  if [ -e "/etc/redis/server.conf.d/${config_name}.conf" ]; then
    echo "Error. Configuration file exists." >&2
    exit 1
  fi
  cp "/usr/share/redis/redis.conf" "/etc/redis/server.conf.d/${config_name}.conf"
  chown redis:redis "/etc/redis/server.conf.d/${config_name}.conf"
  chmod 644 "/etc/redis/server.conf.d/${config_name}.conf" 
  echo "Regenerating service symlinks"
  /usr/lib/systemd/system-generators/redis-service-generator.sh
  systemctl daemon-reload
  echo ""
  echo "When you are ready, you can start the service by typing: systemctl start redis-server-instance@${config_name}"  
elif ["$config_type" = "sentinel" ]; then
  echo "Creating /etc/redis/sentinel.conf.d/${config_name}.conf . Please modify this"
  echo "file with your specific configuration."
  echo "Please ensure that the ports do not conflict with other instances"
  if [ -e "/etc/redis/sentinel.conf.d/${config_name}.conf" ]; then
    echo "Error. Configuration file exists." >&2
    exit 1
  fi
  cp "/usr/share/redis/sentinel.conf" "/etc/redis/sentinel.conf.d/${config_name}.conf"
  chown redis:redis "/etc/redis/sentinel.conf.d/${config_name}.conf" 
  chmod 644 "/etc/redis/sentinel.conf.d/${config_name}.conf"
  echo "Regenerating service symlinks"
  /usr/lib/systemd/system-generators/redis-service-generator.sh
  systemctl daemon-reload
  echo ""
  echo "When you are ready, you can start the service by typing: systemctl start redis-sentinel-instance@${config_name}"  
else
  printUsage
  exit 1
fi


